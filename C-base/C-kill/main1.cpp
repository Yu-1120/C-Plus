#include <stdio.h>
#include "a.c"
int static1(void);
int main(void)
{
    static1();
    /*
      程序的运行结果是： A Hello
   你可能会问：为什么在a.c中定义的全局变量a和函数msg能在main.c中使用？前面说过，
   所有未加static前缀的全局变量和函数都具有全局可见性，其它的源文件也能访问。
   此例中，a是全局变量，msg是函数，并且都没有加static前缀，因此对于另外的源文件main.c是可见的。
   如果加了static，就会对其它源文件隐藏。例如在a和msg的定义前加上static，main.c就看不到它们了。
   利用这一特性可以在不同的文件中定义同名函数和同名变量，而不必担心命名冲突。Static可以用作函数和变量的前缀，
   对于函数来讲，static的作用仅限于隐藏，而对于变量，static还有其他两个作用。
   */
}
int b;
int static1()
{
    //  static的第三个作用是默认初始化为0。
    //  其实全局变量也具备这一属性，因为全局变量也存储在静态数据区。
    //  在静态数据区，内存中所有的字节默认值都是0x00，某些时候这一特点可以减少程序员的工作量。
    //  比如初始化一个稀疏矩阵，我们可以一个一个地把所有元素都置0，然后把不是0的几个元素赋值。
    //     如果定义成静态的，就省去了一开始置0的操作。
    //     再比如要把一个字符数组当字符串来用，但又觉得每次在字符数组末尾加’\0’太麻烦。
    //     如果把字符串定义成静态的，就省去了这个麻烦，因为那里本来就是’\0’。
    int i;
    static char str[20];
    printf("integer: %d; string: (begin)%s(end)", b, str);
    return 0;
}